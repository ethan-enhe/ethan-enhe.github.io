"set runtimepath^=~/.vim runtimepath+=~/.vim/after
"let &packpath = &runtimepath
"source ~/.vimrc
"
" Basic
set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
set termencoding=utf-8
set encoding=utf-8
set number
set ruler
set showcmd
set mouse=a
set laststatus=2

" Indent+Cursor
set smartindent
if &filetype == 'cpp'
	set cindent
endif
set ts=4
set sw=4
set cursorline
set cursorcolumn
" 代码折叠
set foldenable
" 折叠方法
" manual    手工折叠
" indent    使用缩进表示折叠
" expr      使用表达式定义折叠
" syntax    使用语法定义折叠
" diff      对没有更改的文本进行折叠
" marker    使用标记进行折叠, 默认标记是 {{{ 和 }}}
set foldmethod=indent
set foldlevel=99

" AUTO
set autochdir
set autowrite
set autoread
set hlsearch
set incsearch

" MAP
inoremap ' ''<LEFT>
inoremap " ""<LEFT>
inoremap ( ()<LEFT>
inoremap [ []<LEFT>
inoremap { {}<LEFT>
inoremap jj <ESC>
tnoremap jj <c-\><c-n>

vmap <C-c> "+y
map <C-a> :!cat % \| clip.exe<cr>


set makeprg=g++\ %<.cpp\ -o\ %<\ -Wall
map <silent> <F5> :cp<CR>
map <silent> <F6> :cn<CR>
map <silent> <F8> :call RunCode()<CR>
map <silent> <F9> :call CompileCode()<CR>
map <silent> <F10> :NERDTreeToggle<CR>

if !exists("g:os")
	if has("win64") || has("win32") || has("win16")
		let g:os = "Windows"
	else
		let g:os = substitute(system('uname'), '\n', '', '')
	endif
endif



func! CompileCode()
    exec "w"
	exec "ccl"
	exec "silent make"
	exec "redraw!"
	exec "cw 7"
endfunction
func! RunCode()
    exec "w"
    if &filetype == 'cpp'
		exec "ccl"
		if g:os == "Linux"
			if has('nvim')
				exec "bel 7sp term://time ./%<"
			else
				exec "!time ./%<"
			endif
		else
			if has('nvim')
				exec "bel 7sp term://./%<"
			else
				exec "!./%<"
			endif
		endif
    elseif &filetype == 'python'
		if has('nvim')
			exec "bel 7sp term://python %"
		else
            exec "!python %"
		endif
    endif
endfunction


" PLUG
call plug#begin('~/.vim/plugged')
Plug 'itchyny/lightline.vim'
Plug 'scrooloose/nerdtree'
Plug 'morhetz/gruvbox'
Plug 'tomasr/molokai'
call plug#end()

" COLOR
syntax enable
color gruvbox
set background=dark
