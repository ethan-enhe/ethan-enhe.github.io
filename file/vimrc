
" Basic
set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
set termencoding=utf-8
set encoding=utf-8
set number
set ruler
set showcmd
set mouse=a
set laststatus=2

" Indent+Cursor
set smartindent
if &filetype == 'cpp'
	set cindent
endif
set ts=4
set sw=4
set cursorline
set cursorcolumn
" 代码折叠
set foldenable
" 折叠方法
" manual    手工折叠
" indent    使用缩进表示折叠
" expr      使用表达式定义折叠
" syntax    使用语法定义折叠
" diff      对没有更改的文本进行折叠
" marker    使用标记进行折叠, 默认标记是 {{{ 和 }}}
set foldmethod=indent
set foldlevel=99

" Automatic
set autochdir
set autowrite
set autoread
set hlsearch
set incsearch
" cd ~ 

" MAP
inoremap ' ''<LEFT>
inoremap " ""<LEFT>
inoremap ( ()<LEFT>
inoremap [ []<LEFT>
inoremap { {}<LEFT>
vmap <C-c> "+y
set makeprg=g++\ %<.cpp\ -o\ %<\ -Wall\ -O2
map <F6> :cp<CR>
map <F7> :cn<CR>
map <F4> :cw<CR>
map <F9> :make<CR>
imap <F9> <ESC>:make<CR>
map <F8> :call RunCode()<CR>
func! RunCode()
    exec "w"
    if &filetype == 'cpp'
        if has('nvim')
            exec "!%<.exe"
        else
            exec "!time ./%<"
        endif
    elseif &filetype == 'python'
        exec "!python %"
    endif
endfunction

let mapleader=" "
inoremap jj <ESC>
inoremap <leader>. <C-n>
inoremap <leader>, <C-p>

" COLOR
"color elflord
"hi statusline ctermbg=white ctermfg=black
"hi tablineSel ctermbg=7 ctermfg=black

"color ron
"hi StatusLine ctermfg=White ctermbg=Black cterm=bold
"hi special cterm=bold
"hi Tabline ctermbg=White ctermfg=Black cterm=none
"hi Tablinesel ctermbg=Black ctermfg=White cterm=bold

"color evening

syntax enable
set background=dark
"colorscheme solarized

" statusline
function! Buf_total_num()
    return len(filter(range(1, bufnr('$')), 'buflisted(v:val)'))
endfunction
function! File_size(f)
    let l:size = getfsize(expand(a:f))
    if l:size == 0 || l:size == -1 || l:size == -2
        return ''
    endif
    if l:size < 1024
        return l:size.' bytes'
    elseif l:size < 1024*1024
        return printf('%.1f', l:size/1024.0).'k'
    elseif l:size < 1024*1024*1024
        return printf('%.1f', l:size/1024.0/1024.0) . 'm'
    else
        return printf('%.1f', l:size/1024.0/1024.0/1024.0) . 'g'
    endif
endfunction
call plug#begin('~/.vim/plugged')
Plug 'itchyny/lightline.vim'
Plug 'scrooloose/nerdtree'
Plug 'morhetz/gruvbox'
call plug#end()
map<F10> :NERDTreeToggle<CR>
color gruvbox
" This is the END of the template of this vimrc file. [Color]Suitable for Vim 7.* in gnome-terminal, Ubuntu 14.04 LTS

